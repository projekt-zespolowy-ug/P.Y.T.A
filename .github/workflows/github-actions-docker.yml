name: Create and publish Docker images

on:
  pull_request:
    types:
      - closed

env:
  REGISTRY: ghcr.io

jobs:
  if_merged:
    if: github.event.pull_request.merged == true

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Backend image
      - name: Extract metadata for backend Docker
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/backend

      - name: Build and push backend Docker image
        id: push-backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend/
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}

      - name: Generate backend artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}/backend
          subject-digest: ${{ steps.push-backend.outputs.digest }}
          push-to-registry: true

      # Frontend image
      - name: Extract metadata for frontend Docker
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/frontend

      - name: Build and push frontend Docker image
        id: push-frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend/
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}

      - name: Generate frontend artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ github.repository }}/frontend
          subject-digest: ${{ steps.push-frontend.outputs.digest }}
          push-to-registry: true
