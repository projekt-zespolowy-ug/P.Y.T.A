[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = { extras = ["all"], version = "^0.115.3" }
cuid2 = "^2.0.1"
psycopg2-binary = "^2.9.10"
mypy = "^1.13.0"
ruff = "^0.7.2"
requests = "^2.32.3"
bcrypt = "^4.2.0"
types-requests = "^2.32.0.20241016"
sqlmodel = "^0.0.22"
types-python-dateutil = "^2.9.0.20241003"
python-dateutil = "^2.9.0.post0"
pytest = "^8.3.3"
numpy = "^2.1.3"
pip = "^24.3.1"
coverage = "^7.6.10"
anyio = "^4.8.0"

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/simulator.py",
    "*/querying_utils.py",
    "*/__init__.py",
    "*/database.py",
    "*/logger.py",
    ]

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if self\\.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
    "pragma: no cover",
    ]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true
disallow_untyped_calls = false

exclude = [
    "tests",
    ]

[tool.ruff]
target-version = "py313"
line-length = 100

[tool.ruff.format]
indent-style = "tab"

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "B",  # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
]
ignore = [
  "B008", # do not perform function calls in argument defaults
  "W191", # indentation contains tabs
]

fixable = ["ALL"]
unfixable = []

isort.lines-between-types = 1
isort.known-local-folder = ["app"]
